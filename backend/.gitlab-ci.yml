variables:
  SONAR_TOKEN: $SONAR_PROJECT_LOGIN_BACK
  VERSION: 1.0.${CI_PIPELINE_ID}


stages:
  - deploy

deploy:
  stage: deploy
  image: docker:24.0.7-alpine3.19
  environment:
    name: backend
    url: https://std-025-84.praktikum-services.tech
  rules:
    - when: manual
  before_script:
    - apk add docker-cli-compose openssh-client
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan $ENV_HOST > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - cat ~/.ssh/known_hosts
    - docker context create remote --docker "host=ssh://${ENV_USER}@${ENV_HOST}"
  script:
    - docker -v
    - echo $ENV_USER@$ENV_HOST
    - echo $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}" >> deploy.env
    - echo "SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}" >> deploy.env
    - echo "SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}" >> deploy.env
    - echo "SPRING_DATA_MONGODB_URI=${SPRING_DATA_MONGODB_URI}" >> deploy.env
    - echo "REPORT_PATH=\"/var/sausage-store/reports/\"" >> deploy.env
    - docker login -u ${CI_REGISTRY_USER} -p${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker --context remote compose --env-file deploy.env up backend -d --pull "always" --force-recreate